SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[CRIA_MATRIZ_DISTANCIA_SITES]

AS
BEGIN


	--SELECT COUNT(*) AS TOTAL FROM TBA_DISTANCIAS_SITES
	--SELECT * FROM TBA_DISTANCIAS_SITES WHERE UF_A = 'SP' AND SITE_A = 'VIV'

	TRUNCATE TABLE TBA_DISTANCIAS_SITES
	DROP INDEX [INDEX_BUSCA_SITE] ON [dbo].[TBA_DISTANCIAS_SITES]
	DROP INDEX [INDICE_PADRAO] ON [dbo].[TBA_DISTANCIAS_SITES] WITH ( ONLINE = OFF )
	DROP INDEX [INDICE_UF_SITE] ON [dbo].[TBA_DISTANCIAS_SITES]

	CREATE TABLE #TEMP_SITES (
		ID INT IDENTITY(1,1),
		UF VARCHAR(3),
		MUNICIPIO VARCHAR(40),
		SIGLA_SITE VARCHAR(10),
		LAT FLOAT,
		LONG FLOAT
	) ON [PRIMARY]

	INSERT INTO #TEMP_SITES SELECT UF, MUNICIPIO, SIGLA_SITE, AVG(LAT) AS LAT, AVG(LONG) AS LONG FROM TBA_PLANTA_MOVEL WITH(NOLOCK) GROUP BY UF, MUNICIPIO, SIGLA_SITE

	DECLARE @LOOP_COUNTER INT = 1, @LOOP_MAX INT, @DISTANCIA FLOAT
	SELECT @LOOP_MAX = COUNT(ID) FROM #TEMP_SITES

	/*
	DECLARE @UF_A VARCHAR(2), @MUNICIPIO_A VARCHAR(40), @SIGLA_SITE_A VARCHAR(3), @LAT_A FLOAT, @LONG_A FLOAT
	DECLARE @UF_B VARCHAR(2), @MUNICIPIO_B VARCHAR(40), @SIGLA_SITE_B VARCHAR(3), @LAT_B FLOAT, @LONG_B FLOAT
	*/
	

	WHILE @LOOP_COUNTER <= @LOOP_MAX
	BEGIN

		BEGIN TRY
			INSERT INTO TBA_DISTANCIAS_SITES (UF_A, MUNICIPIO_A, SITE_A, LAT_A, LONG_A, UF_B, MUNICIPIO_B, SITE_B, LAT_B, LONG_B, DISTANCIA)
			SELECT * FROM (
				SELECT 
					A.UF AS UF_A, 
					A.MUNICIPIO AS MUNICIPIO_A,
					A.SIGLA_SITE AS SITE_A, 
					A.LAT AS LAT_A, 
					A.LONG AS LONG_A,
					B.UF AS UF_B, 
					B.MUNICIPIO AS MUNICIPIO_B,
					B.SIGLA_SITE AS SITE_B, 
					B.LAT AS LAT_B, 
					B.LONG AS LONG_B,
					dbo.CALCULO_DISTANCIA_LAT_LNG_SITES(A.LAT, A.LONG, B.LAT, B.LONG) AS DISTANCIA
				FROM #TEMP_SITES A
				LEFT JOIN #TEMP_SITES B ON A.ID <> B.ID
				WHERE A.ID = @LOOP_COUNTER
			)A WHERE A.DISTANCIA <= 5
		END TRY
		BEGIN CATCH 
			SELECT @DISTANCIA = -1
		END CATCH

		

		SET @LOOP_COUNTER = @LOOP_COUNTER + 1



		/*
		DECLARE CURSOR1 CURSOR FOR
		SELECT UF, MUNICIPIO, SIGLA_SITE, AVG(LAT) AS LAT, AVG(LONG) AS LONG FROM TBA_PLANTA_MOVEL /*WHERE UF = 'SP'*/ GROUP BY UF, MUNICIPIO, SIGLA_SITE ORDER BY UF, SIGLA_SITE
	
		OPEN CURSOR1

		SELECT @UF_A = UF, @MUNICIPIO_A = MUNICIPIO, @SIGLA_SITE_A = SIGLA_SITE, @LAT_A = LAT, @LONG_A = LONG FROM #TEMP_SITES WHERE ID = @LOOP_COUNTER
				

		-- Lendo a próxima linha
		FETCH NEXT FROM CURSOR1 INTO @UF_B, @MUNICIPIO_B, @SIGLA_SITE_B, @LAT_B, @LONG_B

		-- Percorrendo linhas do cursor (enquanto houverem)
		WHILE @@FETCH_STATUS = 0
		BEGIN

			BEGIN TRY
				SELECT @DISTANCIA = dbo.CALCULO_DISTANCIA_LAT_LONG(REPLACE(@LAT_A,',','.'),REPLACE(@LONG_A,',','.'),REPLACE(@LAT_B,',','.'),REPLACE(@LONG_B,',','.'))
			END TRY
			BEGIN CATCH 
				SELECT @DISTANCIA = -1
			END CATCH

			IF @DISTANCIA <= 50
			BEGIN
				INSERT INTO TBA_DISTANCIAS_SITES (UF_A, MUNICIPIO_A, SITE_A, LAT_A, LONG_A, UF_B, MUNICIPIO_B, SITE_B, LAT_B, LONG_B, DISTANCIA) VALUES (@UF_A, @MUNICIPIO_A, @SIGLA_SITE_A, @LAT_A, @LONG_A, @UF_B, @MUNICIPIO_B, @SIGLA_SITE_B, @LAT_B, @LONG_B, @DISTANCIA)
			END


		-- Lendo a próxima linha
			FETCH NEXT FROM CURSOR1 INTO @UF_B, @MUNICIPIO_B, @SIGLA_SITE_B, @LAT_B, @LONG_B
		END				

		--CALCULO_DISTANCIA_LAT_LONG
		SET @LOOP_COUNTER = @LOOP_COUNTER + 1


		-- Fechando Cursor para leitura
		CLOSE CURSOR1

		-- Finalizado o cursor
		DEALLOCATE CURSOR1

		PRINT @LOOP_MAX

		
		*/
	END



	CREATE NONCLUSTERED INDEX [INDEX_BUSCA_SITE] ON [dbo].[TBA_DISTANCIAS_SITES]
	(
		[UF_A] ASC,
		[SITE_A] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

	CREATE CLUSTERED INDEX [INDICE_PADRAO] ON [dbo].[TBA_DISTANCIAS_SITES]
	(
		[UF_A] ASC,
		[MUNICIPIO_A] ASC,
		[SITE_A] ASC,
		[UF_B] ASC,
		[MUNICIPIO_B] ASC,
		[SITE_B] ASC,
		[DISTANCIA] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

		CREATE NONCLUSTERED INDEX [INDICE_UF_SITE] ON [dbo].[TBA_DISTANCIAS_SITES]
	(
		[UF_A] ASC,
		[SITE_A] ASC
	)
	INCLUDE ( 	[ID],
		[DATA_REFERENCIA],
		[LAT_A],
		[LONG_A],
		[LAT_B],
		[LONG_B]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

END
GO
