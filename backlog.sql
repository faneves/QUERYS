select 
year(data_referencia) AS ANO,
month(data_referencia) AS MES,
avg(co) as CO,
avg(ne) as NE,
avg(no) as NO,
avg(leste) as SUD,
avg(sp) as SP,
avg(sul) as SUL
from INDICADORES_CORAN..TBF_HISTORICO_BACKLOG
WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(DATA_REFERENCIA) IN (2022, 2023) AND MONTH(DATA_REFERENCIA) IN (1,2,3,4,5,6,7,8,9,10,11,12)
group by year(data_referencia), month(data_referencia)
order by year(data_referencia), month(data_referencia)

SELECT
CO,
NE,
NO,
LESTE AS SUD,
SP,
SUL,
MAX(DATA_REFERENCIA)
FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG
WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(DATA_REFERENCIA) = 2023 AND MONTH(DATA_REFERENCIA) =  9 AND DAY(DATA_REFERENCIA) = 3
GROUP BY DAY(DATA_REFERENCIA),CO,
NE,
NO,
LESTE,
SP,
SUL

--==================================================================================================================================

SELECT
DIA,
MAX(DATA_REFERENCIA) AS VIVO
FROM
	(
	SELECT
    --CONVERT(DATE,(CONCAT(DAY(DATA_REFERENCIA),'-',MONTH(DATA_REFERENCIA),'-',YEAR(DATA_REFERENCIA))),103),
	YEAR(DATA_REFERENCIA) AS ANO,
	MONTH(DATA_REFERENCIA) AS MES,
	DAY(DATA_REFERENCIA) AS DIA,
	DATEPART(wk,DATA_REFERENCIA) AS SEMANA,
	VIVO,
	SUL,
	SP,
	LESTE,
	CO,
	NO,
	NE
	FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(DATA_REFERENCIA) = 2023
	) A
GROUP BY SEMANA
ORDER BY SEMANA

--================================================================================================================================================
--BACKLOG POR REGIONAL
--================================================================================================================================================
SELECT
        YEAR(A.DATA_REFERENCIA) AS ANO,
        MONTH(A.DATA_REFERENCIA) AS MES,
        DAY(A.DATA_REFERENCIA) AS DIA,
        VIVO,
        CO,
        NO,
        NE,
        SP,
        LESTE AS SUD,
        SUL        
FROM(
            SELECT
                    MAX(A.DATA_REFERENCIA) AS DATA_REFERENCIA
            FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A
            GROUP BY YEAR(DATA_REFERENCIA), MONTH(DATA_REFERENCIA), DAY(A.DATA_REFERENCIA)
) A
INNER JOIN INDICADORES_CORAN..TBF_HISTORICO_BACKLOG B ON A.DATA_REFERENCIA = B.DATA_REFERENCIA
WHERE B.BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(A.DATA_REFERENCIA) IN (2022, 2023)-- AND MONTH(A.DATA_REFERENCIA) IN (1,2,3,4,5,6,7,8,9,10,11,12) -- AND DAY(DATA_REFERENCIA) = 3
ORDER BY ANO, MES, DIA
--==================================================================================================================================================
--TESTE PARA DESCOBRIR O MAX E O MIN

SELECT
MAX(CO),
B.*
FROM
(
        SELECT
                YEAR(A.DATA_REFERENCIA) AS ANO,
                MONTH(A.DATA_REFERENCIA) AS MES,
                DAY(A.DATA_REFERENCIA) AS DIA,
                VIVO,
                CO,
                NO,
                NE,
                SP,
                LESTE AS SUD,
                SUL        
        FROM(
                    SELECT
                            MAX(A.DATA_REFERENCIA) AS DATA_REFERENCIA
                    FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A
                    GROUP BY YEAR(DATA_REFERENCIA), MONTH(DATA_REFERENCIA), DAY(A.DATA_REFERENCIA)
        ) A
        INNER JOIN INDICADORES_CORAN..TBF_HISTORICO_BACKLOG B ON A.DATA_REFERENCIA = B.DATA_REFERENCIA
        WHERE B.BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(A.DATA_REFERENCIA) IN (2022, 2023) AND MONTH(A.DATA_REFERENCIA) IN (1,2,3,4,5,6,7,8,9) -- AND DAY(DATA_REFERENCIA) = 3
        ORDER BY ANO, MES, DIA
)B
GROUP BY DIA, MES, ANO
--==================================================================================================================================================

	SELECT
		*,
		CONVERT(VARCHAR,DATA_REFERENCIA,103)+' '+CONVERT(VARCHAR,DATA_REFERENCIA,108) AS PERIODO
	FROM indicadores_coran..TBF_HISTORICO_BACKLOG WITH(NOLOCK)
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND DATA_REFERENCIA >= GETDATE()-30
	ORDER BY DATA_REFERENCIA


--CÁLCULO DA MÉDIA MENSAL E DA MÉDIA DAS MÉDIAS MENSAIS POR UM ANO
SELECT
ANO
,AVG(MEDIA_MENSAL_VIVO) AS MEDIA_ANUAL_VIVO
,AVG(MEDIA_MENSAL_CO) AS MEDIA_ANUAL_CO
,AVG(MEDIA_MENSAL_NE) AS MEDIA_ANUAL_NE
,AVG(MEDIA_MENSAL_NO) AS MEDIA_ANUAL_NO
,AVG(MEDIA_MENSAL_SP) AS MEDIA_ANUAL_SP
,AVG(MEDIA_MENSAL_SUD) AS MEDIA_ANUAL_SUD
,AVG(MEDIA_MENSAL_SUL) AS MEDIA_ANUAL_SUL
FROM
(
		SELECT
		ANO
		,MES
		,AVG(VIVO) AS MEDIA_MENSAL_VIVO
		,AVG(CO) AS MEDIA_MENSAL_CO
		,AVG(NE) AS MEDIA_MENSAL_NE
		,AVG(NO) AS MEDIA_MENSAL_NO
		,AVG(SP) AS MEDIA_MENSAL_SP
		,AVG(SUD) AS MEDIA_MENSAL_SUD
		,AVG(SUL) AS MEDIA_MENSAL_SUL
		FROM
		(                               
						SELECT
								YEAR(A.DATA_REFERENCIA) AS ANO,
								MONTH(A.DATA_REFERENCIA) AS MES,
								DAY(A.DATA_REFERENCIA) AS DIA,
								VIVO,
								CO,
								NE,
								NO,
								SP,
								LESTE AS SUD,
								SUL        
						FROM(
								SELECT
										MAX(A.DATA_REFERENCIA) AS DATA_REFERENCIA
								FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A
								GROUP BY YEAR(DATA_REFERENCIA), MONTH(DATA_REFERENCIA), DAY(A.DATA_REFERENCIA)
						) A
						INNER JOIN INDICADORES_CORAN..TBF_HISTORICO_BACKLOG B ON A.DATA_REFERENCIA = B.DATA_REFERENCIA
						WHERE B.BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(A.DATA_REFERENCIA) IN (2022, 2023) AND MONTH(A.DATA_REFERENCIA) IN (1,2,3,4,5,6,7,8,9,10,11,12) -- AND DAY(DATA_REFERENCIA) = 3
						--ORDER BY ANO, MES, DIA
		) B
		GROUP BY ANO, MES
		--ORDER BY ANO, MES  
) C
GROUP BY ANO


--CÁLCULO DOS VALORES MÁXIMOS E MÍNIMOS MENSAIS

SELECT
	ANO
	,MES
	,MIN(VIVO) AS MELHOR_DIA_VIVO
	,MAX(VIVO) AS PIOR_DIA_VIVO
	,AVG(VIVO) AS MEDIA_MENSAL_VIVO

	,MIN(CO) AS MELHOR_DIA_CO
	,MAX(CO) AS PIOR_DIA_CO
	,AVG(CO) AS MEDIA_MENSAL_CO

	,MIN(NE) AS MELHOR_DIA_NE
	,MAX(NE) AS PIOR_DIA_NE
	,AVG(NE) AS MEDIA_MENSAL_NE

	,MIN(NO) AS MELHOR_DIA_NO
	,MAX(NO) AS PIOR_DIA_NO
	,AVG(NO) AS MEDIA_MENSAL_NO

	,MIN(SP) AS MELHOR_DIA_SP
	,MAX(SP) AS PIOR_DIA_SP
	,AVG(SP) AS MEDIA_MENSAL_SP

	,MIN(SUD) AS MELHOR_DIA_SUD
	,MAX(SUD) AS PIOR_DIA_SUD
	,AVG(SUD) AS MEDIA_MENSAL_SUD

	,MIN(SUL) AS MELHOR_DIA_SUL
	,MAX(SUL) AS PIOR_DIA_SUL
	,AVG(SUL) AS MEDIA_MENSAL_SUL
	FROM
	(                               
					SELECT
							YEAR(A.DATA_REFERENCIA) AS ANO,
							MONTH(A.DATA_REFERENCIA) AS MES,
							DAY(A.DATA_REFERENCIA) AS DIA,
							VIVO,
							CO,
							NE,
							NO,
							SP,
							LESTE AS SUD,
							SUL        
					FROM(
							SELECT
									MAX(A.DATA_REFERENCIA) AS DATA_REFERENCIA
							FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A
							GROUP BY YEAR(DATA_REFERENCIA), MONTH(DATA_REFERENCIA), DAY(A.DATA_REFERENCIA)
					) A
					INNER JOIN INDICADORES_CORAN..TBF_HISTORICO_BACKLOG B ON A.DATA_REFERENCIA = B.DATA_REFERENCIA
					WHERE B.BACKLOG = 'BACKLOG CAMPO - 3 DIAS' AND YEAR(A.DATA_REFERENCIA) IN (2022, 2023) AND MONTH(A.DATA_REFERENCIA) IN (1,2,3,4,5,6,7,8,9,10,11,12) -- AND DAY(DATA_REFERENCIA) = 3
					--ORDER BY ANO, MES, DIA
	) B
GROUP BY ANO, MES
ORDER BY ANO, MES  

--=============================================================================================================
--SEPARANDO BACKLOG POR UF
--=============================================================================================================

--SELECT * FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG

--SELECT * FROM INDICADORES_CORAN..TBL_EVENTOS_ATIVOS_BACKLOG

--SELECT * FROM INDICADORES_CORAN..ANALITICO_BACKLOG

SELECT
	GETDATE() AS DATA_REFERENCIA,
	BACKLOG,
	ISNULL([RJ],0) AS 'RJ',
	ISNULL([ES],0) AS 'ES',
	ISNULL([MG],0) AS 'MG',
	ISNULL([SP],0) AS 'SP'
FROM (
	SELECT
		UF,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG B WITH(NOLOCK)
	LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA C ON B.MUNICIPIO = C.MUNICIPIO
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
	GROUP BY UF, BACKLOG
)A
PIVOT (
	MAX(TOTAL) FOR UF IN([AM],[PA],[AC],[RO],[RR],[AP],[MT],[MA],[MS],[GO],[DF],[TO],[PI],[CE],[RN],[PB],[PE],[SE],[AL],[MG],[BA],[PR],[SC],[RS],[RJ],[ES],[SP])
)P


--=============================================================================================================
--SEPARANDO BACKLOG POR IMPACTO
--=============================================================================================================
SELECT
	GETDATE() AS DATA_REFERENCIA,
	CASE WHEN UF = 'CAPITAL' THEN 'SPC'
	WHEN UF = 'INTERIOR' THEN 'SPI'
	ELSE UF
	END UF,
	BACKLOG,
	ISNULL([1],0) AS 'P1',
	ISNULL([2],0) AS 'P2',
	ISNULL([3],0) AS 'P3',
	ISNULL([4],0) AS 'P4'
FROM (
	SELECT
		CASE WHEN UF = 'SP' THEN B.GESTAO
		ELSE UF
		END UF,
		PRIORIDADE,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG A WITH(NOLOCK)
	LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.MUNICIPIO = B.MUNICIPIO
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
	GROUP BY UF, B.GESTAO, PRIORIDADE, BACKLOG
)A
PIVOT (
	MAX(TOTAL) FOR PRIORIDADE IN([1],[2],[3],[4])
)P
WHERE UF <> '-' AND UF IN ('MA','PA')
ORDER BY UF







--BACKLOG - SEPARA SPC e SPI
SELECT
	GETDATE() AS DATA_REFERENCIA,
	UF,
	BACKLOG,
	ISNULL([1],0) AS 'P1',
	ISNULL([2],0) AS 'P2',
	ISNULL([3],0) AS 'P3',
	ISNULL([4],0) AS 'P4'
FROM (
	SELECT
		CASE WHEN UF = 'SP' AND B.GESTAO = 'CAPITAL' THEN 'SPC'
			 WHEN UF = 'SP' AND B.GESTAO = 'INTERIOR' THEN 'SPI'
		ELSE REGIONAL
		END REGIONAL,
		UF,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG A WITH(NOLOCK)
	LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.MUNICIPIO = B.MUNICIPIO
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
	GROUP BY REGIONAL, UF, B.GESTAO, BACKLOG
)A
PIVOT (
	MAX(TOTAL) FOR REGIONAL IN([1],[2],[3],[4])
)P
WHERE UF <> '-'
ORDER BY UF























--LISTA TAS BACKLOG
SELECT
		UF,
		PRIORIDADE,
		BACKLOG,
		COUNT(*) AS TOTAL
FROM INDICADORES_CORAN..ANALITICO_BACKLOG WITH(NOLOCK)
WHERE UF <> '-'
GROUP BY UF, PRIORIDADE, BACKLOG
ORDER BY UF, BACKLOG,PRIORIDADE

SELECT * FROM INDICADORES_CORAN..ANALITICO_BACKLOG


--==================================================================================================================================
WITH TEMP AS
(
	SELECT
		ID,
		DATA,
		CASE WHEN UF = 'SP' AND B.GESTAO = 'CAPITAL' THEN 'SPC'
			 WHEN UF = 'SP' AND B.GESTAO = 'INTERIOR' THEN 'SPI'
		ELSE REGIONAL
		END REGIONAL,
		UF,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG A WITH(NOLOCK)
	LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.MUNICIPIO = B.MUNICIPIO
	WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
	GROUP BY REGIONAL, UF, B.GESTAO, BACKLOG
)

SELECT
     B.ID_LINHA,
     B.ANO,
     B.MES,
     B.DIA,
     B.DATA_EIXO AS REFERENCIA,
     B.MAX_DATA_REFERENCIA,
     B.MIN_BACKLOG, B.AVG_BACKLOG, B.MAX_BACKLOG, C.NE AS BACKLOG
     FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY ANO DESC, MES DESC, DIA DESC) AS ID_LINHA,
				ANO,
				MES,
				DIA,
				DATA_EIXO,
				MAX(DATA_REFERENCIA) AS MAX_DATA_REFERENCIA,
				MIN(BACKLOG) AS MIN_BACKLOG,
				AVG(BACKLOG) AS AVG_BACKLOG,
				MAX(BACKLOG) AS MAX_BACKLOG
      		FROM (SELECT 
				A.DATA_REFERENCIA,
				DATEPART(YEAR , A.DATA_REFERENCIA) AS ANO,
				DATEPART(MONTH, A.DATA_REFERENCIA) AS MES,
				DATEPART(DAY  , A.DATA_REFERENCIA) AS DIA,
				FORMAT(A.DATA_REFERENCIA, 'dd/MM/yyyy') AS DATA_EIXO,
				SP AS BACKLOG
			FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A WITH(NOLOCK)
			WHERE 1=1  AND A.BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
      			) A
      GROUP BY ANO, MES, DIA, DATA_EIXO
     ) B
     INNER JOIN INDICADORES_CORAN..TBF_HISTORICO_BACKLOG C ON B.MAX_DATA_REFERENCIA = C.DATA_REFERENCIA AND C.BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
     WHERE B.ID_LINHA < 10
     ORDER BY ID_LINHA DESC

	 SELECT * FROM INDICADORES_CORAN..TBF_HISTORICO_BACKLOG A WITH(NOLOCK)
	 WHERE BACKLOG = 'BACKLOG CAMPO - 3 DIAS'
	 ORDER BY DATA_REFERENCIA







SELECT
	GETDATE() AS DATA_REFERENCIA,
	BACKLOG,
	ISNULL([VIVO],0) AS 'VIVO',
	ISNULL([SUL],0) AS 'SUL',
	ISNULL([SPC],0) AS 'SPC',
	ISNULL([SPI],0) AS 'SPI',
	ISNULL([LESTE],0) AS 'LESTE',
	ISNULL([CO],0) AS 'CO',
	ISNULL([NO],0) AS 'NO',
	ISNULL([NE],0) AS 'NE'
FROM (
	SELECT
		CASE WHEN UF = 'SP' AND B.GESTAO = 'CAPITAL' THEN 'SPC'
			 WHEN UF = 'SP' AND B.GESTAO = 'INTERIOR' THEN 'SPI'
		ELSE REGIONAL
		END REGIONAL,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG A
	LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.MUNICIPIO = B.MUNICIPIO
	GROUP BY REGIONAL, UF, GESTAO, BACKLOG
	UNION ALL
	SELECT
		'VIVO' AS REGIONAL,
		BACKLOG,
		COUNT(*) AS TOTAL
	FROM INDICADORES_CORAN..ANALITICO_BACKLOG
	GROUP BY BACKLOG
)A
PIVOT (
	MAX(TOTAL) FOR REGIONAL IN([VIVO],[SUL],[SPC],[SPI],[LESTE],[CO],[NO],[NE])
)P