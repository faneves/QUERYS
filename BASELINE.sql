--BASELINE
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A WHERE DIA <> DAY(GETDATE())
ORDER BY UF,MES, DIA
--===============================================================================================================================
--POR UF
--===============================================================================================================================
SELECT
DIA,
UF,
EVENTOS,
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE ANO = 2023 AND MES = 5 AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A ORDER BY UF, DIA
--=================================================================================================================================
--POR REGIONAL
--==================================================================================================================================
SELECT
DIA,
REGIONAL,
EVENTOS,
SUM(EVENTOS) OVER (PARTITION BY REGIONAL ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    REGIONAL,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE ANO = 2023 AND MES = 5 AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL
)A ORDER BY REGIONAL, DIA
--=======================================================================================================================================
--==============ESTRATIFICADO===================
--=======================================================================================================================================
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
CLASS AS CLASSIFICACAO,
COUNT(CLASS) AS QTDE,
LEGENDA = 'Mês Atual'
FROM (
		SELECT
					DAY(DATA_ENCERRAMENTO) AS DIA,
					UF,
					CASE WHEN TIPO_REDE IN ('Metro Baixa' , 'DWDM', 'Rádio','SDH') THEN 'TX'
							WHEN TIPO_REDE IN ('ERB / Repetidor') THEN 'RF'
							WHEN TIPO_REDE IN ('Climatização', 'Energia') THEN 'INFRA'
							WHEN TIPO_REDE IN ('Óptica') THEN 'REDE EXTERNA'
							WHEN TIPO_REDE IN ('Serviço de Internet', 'Determinística', 'IP', 'ADSL', 'Central', 'BSC / RNC') THEN 'OUTROS'
							WHEN TIPO_REDE = 'ERB / Repetidor' AND TIPO_BILHETE = 'ASTRO DOL' THEN 'DOL'
					END AS CLASS
				FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
				WHERE ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-'
	)A
GROUP BY DIA, UF, CLASS
ORDER BY UF, MES, DIA

--======================================================================================================================================================
--- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A WHERE DIA < DAY(GETDATE())

	UNION ALL

--- MES ANTERIOR
SELECT
DIA,
MES= MONTH(GETDATE())-1,
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mes Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES= MONTH(GETDATE())-1 AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A 


	UNION ALL

--- ANO ANTERIOR MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE())-1,
UF,
EVENTOS,
LEGENDA = 'Ano Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE())-1 AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A 
--=============================================================================================================================
--==========ORIGINAL DO POWER BI====================
--========CALCULA BACKLOG ACUMULADO==================
--- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A WHERE DIA < DAY(GETDATE())

	UNION ALL

--- MES ANTERIOR
SELECT
DIA,
MES= MONTH(GETDATE())-1,
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mês Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES= MONTH(GETDATE())-1 AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A 

	UNION ALL

--- ANO ANTERIOR MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE())-1,
UF,
EVENTOS,
LEGENDA = 'Ano Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE())-1 AND MES = MONTH(GETDATE()) AND FLAG_BASELINE = 1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A 

--===============================================================================================================================================
--===============================================================================================================================================



--- MES ATUAL TIPO PAGAMENTO
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
TIPO_PAGAMENTO,
EVENTOS,
LEGENDA = 'Mês Atual'
,SUM(EVENTOS) OVER (PARTITION BY UF, TIPO_PAGAMENTO ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO_TIPO_PGTO
--,SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO_UF
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    TIPO_PAGAMENTO,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM QUALIDADE..BASELINE WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), UF, TIPO_PAGAMENTO
)A WHERE DIA < DAY(GETDATE())




--===========================================================================================================================================
DECLARE @COUNTER INT

SET @COUNTER = (SELECT MAX(DAY(DATA_ENCERRAMENTO))+1 FROM QUALIDADE..BASELINE)

SELECT
CASE WHEN DIA < ROW_NUMBER () OVER (PARTITION BY DIA, UF ORDER BY  YEAR(GETDATE()),MONTH(GETDATE()), DIA, UF) + @COUNTER AS DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM QUALIDADE..BASELINE WITH(NOLOCK)
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), UF
)A WHERE DIA < DAY(GETDATE()) and UF = 'AC'




--====================================================================================================================
--alterando base de dados do BI de baseline para o bd avaliacao_campo




WITH TEMP AS
(
    select * from 
    (
    select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
    (
    select * from avaliacao_campo..tas_fora where id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
    ) a
    ) b
    where nl = 1
)
--- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.REGIONAL = 'SP' AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A WHERE DIA < DAY(GETDATE()) AND REGIONAL = 'SPI'

	UNION ALL

--- MES ANTERIOR
SELECT
DIA,
MES= MONTH(GETDATE())-1,
ANO = YEAR(GETDATE()),
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Mês Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SPA','SPB','SPI','SP') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES= MONTH(GETDATE())-1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A 

	UNION ALL

--- ANO ANTERIOR MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE())-1,
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Ano Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SPA','SPB','SPI','SP') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE())-1 AND MES = MONTH(GETDATE()) AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A 


--Baseline estratificado
SELECT
DIA, SUM(QTDE)
FROM
(
        SELECT
        DIA,
        MES,
        ANO,
        CASE WHEN UF = 'SP' THEN B.NOME_REGIONAL
        ELSE REGIONAL
        END REGIONAL,
        UF,
        TIPO_REDE,
        CLASS AS CLASSIFICACAO,
        COUNT(CLASS) AS QTDE
        --LEGENDA = 'Mês Atual'
        FROM (
                SELECT DISTINCT
                EVENTO,
                            DAY(DATA_ENCERRAMENTO) AS DIA,
                            MONTH(DATA_ENCERRAMENTO) AS MES,
                            YEAR(DATA_ENCERRAMENTO) AS ANO,
                                                TIPO_REDE,
                                                REGIONAL,
                                                UF,
                                                MUNICIPIO,
                            CASE WHEN TIPO_REDE IN ('Metro Baixa' , 'DWDM', 'Rádio','SDH') THEN 'TX'
                                    WHEN TIPO_REDE IN ('ERB / Repetidor') THEN 'RF'
                                    WHEN TIPO_REDE IN ('Climatização', 'Energia') THEN 'INFRA'
                                    WHEN TIPO_REDE IN ('Óptica') THEN 'REDE EXTERNA'
                                --WHEN TIPO_REDE IN ('Serviço de Internet', 'Determinística', 'IP', 'ADSL', 'Central', 'BSC / RNC') THEN 'OUTROS'
                                    WHEN TIPO_REDE = 'ERB / Repetidor' AND TIPO_BILHETE = 'ASTRO DOL' THEN 'DOL'
                                    ELSE 'OUTROS'
                            END AS CLASS
                        FROM INDICADORES_CORAN..TBL_EVENTOS_FECHADOS WITH(NOLOCK)
                        WHERE TIPO_TA <>'Rede Externa' AND ANO in (YEAR(GETDATE()),YEAR(GETDATE())-1,YEAR(GETDATE())-2) AND FLAG_BASELINE = 1 AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
            )A
        LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF = 'SP' AND A.MUNICIPIO = B.MUNICIPIO
        GROUP BY ANO, MES, DIA, B.NOME_REGIONAL, REGIONAL, UF, TIPO_REDE, A.CLASS
        --ORDER BY MES, DIA
) Z
GROUP BY DIA
ORDER BY DIA



--====================================================================================================================================================
WITH TEMP AS
(
    select * from 
    (
    select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
    (
    select * from avaliacao_campo..tas_fora where id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
    ) a
    ) b
    where nl = 1
)
--Baseline estratificado       
        SELECT
            DIA,
            MES,
            ANO,
            REGIONAL,
            UF,
            CLASS AS CLASSIFICACAO,
            COUNT(CLASS) AS QTDE
            --LEGENDA = 'Mês Atual'
        FROM (
                        SELECT DISTINCT
                            EVENTO,
                            DAY(DATA_ENCERRAMENTO) AS DIA,
                            MONTH(DATA_ENCERRAMENTO) AS MES,
                            YEAR(DATA_ENCERRAMENTO) AS ANO,
                            CASE WHEN UF IN ('SP','SPI','SPC','SPA','SPB') THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
                            WHEN REGIONAL = 'BA/SE' THEN 'NE'
                            WHEN REGIONAL = 'RJ/ES' THEN 'SUD'
                            ELSE REGIONAL
                            END REGIONAL,
                            CASE WHEN UF IN ('SP','SPI','SPC','SPA','SPB') THEN 'SP'
                            ELSE UF
                            END UF,
                            A.MUNICIPIO,
                            TIPO_TA AS CLASS
                        FROM TEMP A WITH(NOLOCK)
                        LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SP','SPI','SPC','SPA','SPB') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
                        WHERE TIPO_TA <>'Rede Externa' AND ANO in (YEAR(GETDATE()),YEAR(GETDATE())-1,YEAR(GETDATE())-2) AND UF <> '-' AND DATA_ENCERRAMENTO <= GETDATE()-1
            )C
        GROUP BY ANO, MES, DIA, REGIONAL, UF, C.CLASS
        ORDER BY ANO, MES, DIA









--
--pagamento avaliacao campo
--
select * from 
(
select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
(
select * from avaliacao_campo..tas_fora where ano = 2023 and mes = 10  and id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
) a
) b
where nl = 1






---MAITE OLIVEIRA 
---28/06/2022 - QUERY PARA CONSULTA DOS TAS


SELECT                                                                             
TQA_CODIGO               AS EVENTO,                    
TQA_TIQUETE_ELEMENTO     AS FLAG_EVENTO_ELEMENTO,   
TQA_TP                   AS TP,           
TQA_PRIORIDADE           AS PRIORIDADE,         
TQA_TIPO_BILHETE         AS TIPO_BILHETE,       
TP_PLANTA.TPL_NOME       AS TIPO_PLANTA,         
TP_REDE_TA.TPJ_NOME      AS TIPO_REDE,           
ES.EST_CODIGO            AS UF,  
TQA_CRO_CODIGO           AS CRO_CODIGO,
TQA_LOCALIDADE_SIGLA     AS SIGLA_LOCALIDADE,
TQA_LOCALIDADE_CODIGO    AS CODIGO_LOCALIDADE,              
TQA_LOCALIDADE_NOME      AS MUNICIPIO, 
CASE 
	WHEN ES.EST_CODIGO IN('AC','DF','GO','MS','MT','RO','TO')
	THEN 'CO' 
	ELSE 
	CASE WHEN ES.EST_CODIGO IN ('AL','BA','CE','PB','PE','PI','RN','SE') 
	THEN 'NE'
	ELSE 
	CASE WHEN ES.EST_CODIGO IN('AM','AP','MA','PA','RR')
	THEN 'NO'
	ELSE 
	CASE WHEN ES.EST_CODIGO IN('ES','MG','RJ')
	THEN 'SUD'
	ELSE 
	CASE WHEN ES.EST_CODIGO IN('PR','RS','SC')
	THEN 'SUL'
	ELSE 
		CASE WHEN ES.EST_CODIGO = 'SP' AND TBL_TA.TQA_LOCALIDADE_CODIGO = 11000 THEN 'CAPITAL' ELSE 'INTERIOR' END 
END END END END END REGIONAL,         
TQA_DDD                  AS DDD,               
TQA_AREA_CODIGO          AS SITE,               
TQA_AREA_NOME            AS NOME_SITE,           
TQA_GERENCIA_CODIGO      AS GERENCIA,           
TQA_TIPO_SITE            AS TIPO_SITE,  
TQA_IMPACTO_EQP          AS IMPACTO,             
TQA_DATA_CRIACAO         AS DATA_CRIACAO,        
TQA_DATA_APRESENTACAO    AS DATA_APRESENTACAO,   
GRP.GRP_NOME             AS GRUPO_CRIACAO,      
USR.USR_NOME             AS USUARIO_CRIACAO,    
GRP_ATUAL.GRP_NOME       AS GESTOR_ATUAL,       
'-'                      AS SIGLA_ERB,          
'-'                      AS TECNOLOGIA,          
'-'                      AS FABRICANTE,          
CASE WHEN TP_TA.TPB_CODIGO = 500 THEN 500 WHEN TP_TA.TPB_CODIGO = 200 THEN 200 ELSE 777 END SKILL,               
TBL_TA.TQA_STATUS        AS STATUS_TA,  
STATUS_TA.STA_NOME       AS STATUS_TA_NOME,                                     
TBL_TA.TQA_ALARME_TIPO,                        
TBL_TA.TQA_TIPO_FALHA,                          
TBL_TA.TQA_CLASSIFICACAO,                        
TBL_TA.TQA_TIPO_AFETACAO,                                                                           
CASE WHEN TQA_ALARME_TIPO = 'VANDALISMO' THEN 1 WHEN TQA_ALARME_TIPO = 'Vandalismo' THEN 1 ELSE 0 END FLAG_VANDALISMO,                                        
(SELECT COUNT(TQA_CODIGO) FROM SIGITM3.TBL_TA TA_COUNT WHERE TA_COUNT.TQA_ORIGEM = TBL_TA.TQA_CODIGO) AS AFETACAO,

CASE WHEN TQA_ALARME_TIPO LIKE '%AC - ANORMAL%' 
      OR TQA_ALARME_TIPO LIKE '%INFRA - ENERGIA%' 
      THEN 'Infra_AC'
      
      WHEN TQA_ALARME_TIPO LIKE '%ALTA TEMP%' 
      OR TQA_ALARME_TIPO LIKE '%AR COND%' 
      OR TQA_ALARME_TIPO LIKE '%AR. COND%' 
      OR TQA_ALARME_TIPO LIKE '%CLIMATIZAÇÃO%'
      THEN 'Infra_Climatização'
      
      WHEN TQA_ALARME_TIPO LIKE '%RET. ANORMAL%'
      OR TQA_ALARME_TIPO LIKE '%RET ANORMAL%'
      THEN 'Infra_Retificador'
      
      WHEN TQA_ALARME_TIPO LIKE '%BAT.%'
      OR TQA_ALARME_TIPO LIKE '%BATERIA%'
      OR TQA_ALARME_TIPO LIKE '%FLUT. ANORMAL%'
      OR TQA_ALARME_TIPO LIKE '%FLUTUA%'
      THEN 'Infra_Bateria'
      
      WHEN TQA_ALARME_TIPO LIKE '%FCC%'
      THEN 'Infra_FCC'
      
      WHEN TQA_ALARME_TIPO LIKE '%GERADOR%'
      OR TQA_ALARME_TIPO LIKE '%GMG%'
      OR TQA_ALARME_TIPO LIKE '%COMBUST%'
      THEN 'Infra_GMG'
      
      WHEN TQA_ALARME_TIPO LIKE '%CONVERSOR%'
      THEN 'Infra_Conversor'
      
      WHEN TQA_ALARME_TIPO LIKE '%USCA%'
      THEN 'Infra_USCA'
      
      WHEN TQA_ALARME_TIPO LIKE '%QDF%'
      OR TQA_ALARME_TIPO LIKE '%DISJUNTOR%'
      THEN 'Infra_QDF'
      
      WHEN TQA_ALARME_TIPO LIKE '%INV. ANORMAL%'
      THEN 'Infra_Inversor'
      
      WHEN TQA_ALARME_TIPO LIKE '%INFRA%'
      THEN 'Infra_Geral'
      
      WHEN TQA_ALARME_TIPO LIKE '%IUB%'
      OR TQA_ALARME_TIPO LIKE '%CAPALLOC%'
      OR TQA_ALARME_TIPO LIKE 'S1 - DEGRADAÇÃO'
      OR TQA_ALARME_TIPO LIKE '% IUB%'
      OR TQA_ALARME_TIPO LIKE '%/IUB%'
      THEN 'RF_Capacidade'
      
      WHEN TQA_ALARME_TIPO LIKE '%INDISPONIBILIDADE ELEMENTO%'
      THEN 'RF_INDISPONIBILIDADE ELEMENTO'
      
      WHEN TQA_ALARME_TIPO LIKE '%INDISPONIBILIDADE SERVICO%'
      THEN 'RF_INDISPONIBILIDADE SERVIÇO'
      
      WHEN TQA_ALARME_TIPO LIKE '%ENODEB FALHA DE COMUNICACAO%'
      OR TQA_ALARME_TIPO LIKE '%TG FORA DE SERVICO%'
      THEN 'RF_INDISPONIBILIDADE_COMUNICAÇÃO'
      
      WHEN TQA_ALARME_TIPO LIKE '%INDISPONIBILIDADE SETOR%'
      OR TQA_ALARME_TIPO LIKE '%SETOR FORA%'
      OR TQA_ALARME_TIPO LIKE '%TODOS OS SETORES%'
      OR TQA_ALARME_TIPO LIKE '%INDISPONIBILIDADE SETOR%'
      THEN 'RF_INDISPONIBILIDADE SETOR'
      
      WHEN TQA_ALARME_TIPO LIKE '%TRAFEGO%'
      OR TQA_ALARME_TIPO LIKE '%TRÁFEGO%'
      THEN 'RF_INDISPONIBILIDADE TRAFEGO'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA DE COMUNICACAO%'
      OR TQA_ALARME_TIPO LIKE '%FALHA COMUNICAÇÃO%'
      THEN 'RF_FALHA DE COMUNICAÇÃO'
      
      WHEN TQA_ALARME_TIPO LIKE '%BAIXA EFICIENCIA%'
      OR TQA_ALARME_TIPO LIKE '%BAIXA EFICIÊNCIA%'
      THEN 'RF_BAIXA EFICIENCIA'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA INCONSISTENCIA CONFIGURACAO%'
      THEN 'RF_CONFIGURAÇÃO'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA MAL_FUNCIONAMENTO HARDWARE%'
      THEN 'RF_HARDWARE'
      
      WHEN TQA_ALARME_TIPO LIKE '%ALERTA INDISPONIBILIDADE DADOS%'
      THEN 'RF_INDISPONIBILIDADE DADOS'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA DE ALIMENTACAO NA PLACA%'
      THEN 'RF_ALIMENTAÇÃO PLACA'
      
      WHEN TQA_ALARME_TIPO LIKE '%CELL DOWNTIME%'
      OR TQA_ALARME_TIPO LIKE '%CELLDOWNTIME%'
      THEN 'RF_CELLDOWNTIME'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA MAL_FUNCIONAMENTO CLOCK%'
      THEN 'RF_CLOCK'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA MAL_FUNCIONAMENTO FAN%'
      THEN 'RF_FAN'
      
      WHEN TQA_ALARME_TIPO LIKE '%MAL_FUNCIONAMENTO PORTADORA%'
      THEN 'RF_PORTADORA'
      
      WHEN TQA_ALARME_TIPO LIKE '%FALHA TRANSMISSAO ELEMENTO%'
      THEN 'RF_TX_ELEMENTO'
      
      WHEN TQA_ALARME_TIPO LIKE '%MAL_FUNCIONAMENTO SOFTWARE%'
      THEN 'RF_SOFTWARE'
      
      WHEN TQA_ALARME_TIPO LIKE '%TEMPERATURA ALTA NA PLACA%'
      THEN 'RF_TEMPERATURA PLACA'
      
      WHEN TQA_ALARME_TIPO LIKE '%TEMPERATURA_ALTA ELEMENTO%'
      THEN 'RF_TEMPERATURA_ELEMENTO'
      
      WHEN TQA_ALARME_TIPO LIKE '%IP REMOTO INACESSIVEL%'
      THEN 'RF_IP REMOTO INACESSIVEL'
      
      WHEN TQA_ALARME_TIPO LIKE '%RADIO FORA DE SERVICO%'
      THEN 'RF_RADIO'
      
      WHEN TQA_ALARME_TIPO LIKE '%DESEQUILIBRIO DE RX%'
      THEN 'RF_DESEQUILIBRIO RX'
      
      WHEN TQA_ALARME_TIPO LIKE '%TG FORA DE SERVICO%'
      THEN 'RF_TG FORA DE SERVICO'
      
      WHEN TQA_ALARME_TIPO LIKE '%RF_DIVERSIDADE RX%'
      THEN 'RF_DIVERSIDADE RX'
      
      WHEN TQA_ALARME_TIPO LIKE '%CONEXAO ELEMENTO%'
      THEN 'RF_CONEXAO ELEMENTO'
      
      WHEN TQA_ALARME_TIPO LIKE '%CONGESTIONAMENTO%'
      THEN 'RF_CONGESTIONAMENTO'
      
      WHEN TQA_ALARME_TIPO LIKE '%ALARME EXTERNO%'
      THEN 'RF_ALARME EXTERNO'
      
      WHEN TQA_ALARME_TIPO LIKE '%SINCRONISMO%'
      THEN 'RF_SINCRONISMO'
      
      WHEN TQA_ALARME_TIPO LIKE '%GERENCIA%'
      THEN 'RF_GERENCIA'
      
      WHEN TQA_ALARME_TIPO LIKE '%VSWR%'
      THEN 'RF_VSWR'
      
      WHEN TQA_ALARME_TIPO LIKE '%Sistema Gerência%'
      THEN 'Sistema Gerência_'
      
      WHEN TQA_ALARME_TIPO LIKE '%Plataforma%'
      THEN 'Plataforma_'
      
      WHEN TQA_ALARME_TIPO LIKE '%Dados%'
      THEN 'Dados_'
      
      WHEN TQA_ALARME_TIPO LIKE '%Comutação%'
      THEN 'Comutação_'
      
      WHEN TQA_ALARME_TIPO LIKE '%Dados%'
      THEN 'Dados_'
      
      WHEN TQA_ALARME_TIPO LIKE 'Acesso'
      THEN 'RF_'
      
      WHEN TQA_ALARME_TIPO LIKE 'Transmissão'
      THEN 'TX_'
      
      ELSE 'SEM RESUMO'
      
END RESUMO_ALARME,

'${DATA_REF}' AS DATA_IMPORT_SISTEMA

FROM SIGITM3.TBL_TA TBL_TA           
INNER JOIN SIGITM3.TBL_GRUPOS GRP 
ON TBL_TA.TQA_CRIADOPOR_GRUPO = GRP.GRP_CODIGO                     
LEFT JOIN SIGITM3.TBL_USUARIOS USR 
ON TBL_TA.TQA_CRIADOPOR_USUARIO = USR.USR_CODIGO          
INNER JOIN SIGITM3.TBL_GRUPOS GRP_ATUAL 
ON TBL_TA.TQA_RESPONSAVELPOR_GRUPO = GRP_ATUAL.GRP_CODIGO      
INNER JOIN SIGITM3.TBC_TIPOS_REDE_TA TP_REDE_TA 
ON TBL_TA.TQA_TIPO_REDE = TP_REDE_TA.TPJ_CODIGO 
INNER JOIN SIGITM3.TBC_TIPOS_PLANTA TP_PLANTA  
ON TBL_TA.TQA_TIPO_PLANTA = TP_PLANTA.TPL_CODIGO  
INNER JOIN SIGITM3.TBC_TIPOS_TA TP_TA      
ON TP_TA.TPB_CODIGO = TP_REDE_TA.TPJ_TIPO_TA
INNER JOIN SIGITM3.TBC_STATUS_TA STATUS_TA
ON TBL_TA.TQA_STATUS = STATUS_TA.STA_CODIGO
INNER JOIN SIGITM3.TBL_LOCALIDADES L
ON TQA_LOCALIDADE_CODIGO = L.LOC_CODIGO
INNER JOIN SIGITM3.TBL_ESTADOS ES
ON L.LOC_ESTADO = ES.EST_ID


WHERE 
TBL_TA.TQA_STATUS=10 AND
TP_PLANTA.TPL_CODIGO = 3 AND 
TBL_TA.TQA_ORIGEM IS NULL AND
TBL_TA.TQA_RAIZ IS NULL AND
L.LOC_ESTADO NOT IN (9999) AND 
TBL_TA.TQA_RESPONSAVELPOR_GRUPO IN(1997,6321,6664,7197,6648,6647,6649,6642,6650,6651,7312,5961,5954,7004,6473,6471,5807,1340,5744,5745,5747,6748,6749,1341,1342,6746,1343,1344,1345,1346,1347,1348,1350,1351,6728,1352,1357,6738,1362,6729,1363,1364,1365,1366,6739,1367,1368,6750,1369,1370,1371,1372,1374,1377,1378,1379,1380,6740,1381,1382,1383,1384,1385,1386,1172,7002,1387,1388,6747,1389,1390,1391,5880,1392,1393,1394,1395,1396,1397,6745,1398,1399,1401,1400,1402,1403,1404,1405,1406,1408,1407,1409,6741,1410,6742,1411,1412,1413,1414,6743,1415,1416,6751,1417,1418,1419,1420,1421,1422,1423,1424,6752,1425,1426,1427,1428,6744,1429,1430,1431,5797,1432,1433,1434,1435,1436,1437,1974,1438,1439,1440,1441,1442,1443,1444,1445,1446,1975,1447,1448,1450,1451,1452,1453,1454,1455,1456,1976,1977,1978,1457,1458,1460,1461,1462,1449,1459,1463,1464,1979,1465,1466,1467,1468,1469,1470,1980,1471,1472,1473,6998,1349,6394,6689,7198,6688,6685,6686,6692,6687,6690,6691,6835,7313,6393,6706,7199,6705,6704,6707,6708,6837,6849,5715,6239,6241,6681,6679,6684,7307,6237,6238,6825,6231,6269,6270,7005,7001,7000,6821,7195,6820,6818,6824,6819,6822,6823,6817,7203,6409,6696,7194,6695,6693,6699,6694,6697,6698,6836,7314,6323,6991,7192,6992,6993,6994,6995,6996,6997,7315,6320,6324,6984,7193,6985,6986,6987,6988,6989,6990,7316,6322,6665,7196,6654,6653,6655,6652,6656,6657,7317,6395,6171,7201,6793,6792,6788,6791,6790,6787,6978,6396,6730,6734,7202,6733,6731,6737,6732,6735,6736,6813,7318,6397,6666,7200,6660,6663,6659,6661,6658,6662,6814,7319,5867,5868,5761)




--===============================================================
--TESTES

WITH TEMP AS
(
    select * from 
    (
    select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
    (
    select * from avaliacao_campo..tas_fora where id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
    ) a
    ) b
    where nl = 1
)
--- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
REGIONAL,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY REGIONAL ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SP') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE() AND REGIONAL = 'NO'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL
)A WHERE DIA < DAY(GETDATE())



--========================================
--TESTE para SP


WITH TEMP AS
(
    select * from 
    (
    select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
    (
    select * from avaliacao_campo..tas_fora where id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
    ) a
    ) b
    where nl = 1 and uf in ('SP','SPA','SPB','SPC','SPI') and MUNICIPIO = 'OSASCO'
)
--- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL IN ('SP','SPA','SPB','SPC','SPI') THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    CASE WHEN UF IN ('SP','SPA','SPB','SPC','SPI') THEN 'SP'
    ELSE UF
    END UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP) A 
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.REGIONAL = 'SP' AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A WHERE DIA < DAY(GETDATE())

	UNION ALL

--- MES ANTERIOR
SELECT
DIA,
MES= MONTH(GETDATE())-1,
ANO = YEAR(GETDATE()),
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Mês Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SPA','SPB','SPI','SP') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES= MONTH(GETDATE())-1 AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A 

	UNION ALL

--- ANO ANTERIOR MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE())-1,
REGIONAL,
UF,
EVENTOS,
LEGENDA = 'Ano Anterior',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    CASE WHEN A.REGIONAL = 'SP' THEN B.NOME_REGIONAL COLLATE Latin1_General_CI_AI
    ELSE A.REGIONAL
    END REGIONAL,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP A WITH(NOLOCK)
    LEFT JOIN INDICADORES_CORAN..TBA_DIVISAO_MUNICIPIOS_SP_FIXA B ON A.UF IN ('SPA','SPB','SPI','SP') AND A.MUNICIPIO = B.MUNICIPIO COLLATE Latin1_General_CI_AI
    WHERE TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE())-1 AND MES = MONTH(GETDATE()) AND UF <> '-'
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL, NOME_REGIONAL, UF
)A 



with temp1 AS(
select
C.*,nome_regional,case when uf in ('SP','SPA','SPB','SPC','SPI') then d.nome_regional collate Latin1_General_CI_AI else c.regional end regional2
from
(

select * from 
    (
    select row_number () over (partition by evento order by evento, status_indicador desc) as nl, a.* from 
    (
    select * from avaliacao_campo..tas_fora where id_planta = 1 and id_tipo_pagamento = 1 and tipo_ta <> 'Rede Externa'
    ) a
    ) b
    where nl = 1 and uf in ('SP','SPA','SPB','SPC','SPI') and MUNICIPIO = 'jundiaí'

) c
 left join indicadores_coran..tba_divisao_municipios_sp_fixa d on c.uf in ('SP','SPA','SPB','SPC','SPI') and c.municipio = d.municipio collate Latin1_General_CI_AI
)

 --- MES ATUAL
SELECT
DIA,
MES= MONTH(GETDATE()),
ANO = YEAR(GETDATE()),
REGIONAL2,
UF,
EVENTOS,
LEGENDA = 'Mês Atual',
SUM(EVENTOS) OVER (PARTITION BY UF ORDER BY DIA ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS EVENTOS_ACUMULADO
FROM (
    SELECT
    DAY(DATA_ENCERRAMENTO) AS DIA,
    REGIONAL2,
    UF,
    COUNT(DISTINCT EVENTO) AS EVENTOS
    FROM TEMP1 A 
    WHERE A.TIPO_TA <> 'Rede Externa' AND ANO = YEAR(GETDATE()) AND MES = MONTH(GETDATE()) AND UF <> '-' AND DATA_ENCERRAMENTO < GETDATE()
    GROUP BY DAY(DATA_ENCERRAMENTO), REGIONAL2, NOME_REGIONAL, UF
)A WHERE DIA < DAY(GETDATE())
